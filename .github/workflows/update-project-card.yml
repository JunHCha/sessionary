name: Update Project Card Dates

on:
  issues:
    types: [opened, closed]

jobs:
  update-project-dates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Start or End Date
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          PROJECT_ID: ${{ secrets.SESSIONARY_PROJECT_ID }}
          FIELD_ID_START: ${{ secrets.START_DATE_FIELD_ID }}
          FIELD_ID_END: ${{ secrets.END_DATE_FIELD_ID }}
        run: |
          DATE_VALUE=$(date -u +"%Y-%m-%d")
          ISSUE_ID=${{ github.event.issue.node_id }}

          # Query to find the project card ID for the issue
          QUERY=$(cat <<EOF
          query {
            node(id: "$PROJECT_ID") {
              ... on ProjectV2 {
                items(first: 100) {
                  nodes {
                    id
                    content {
                      ... on Issue {
                        id
                      }
                    }
                  }
                }
              }
            }
          }
          EOF
          )

          # Escape the JSON string properly
          JSON_QUERY=$(echo "$QUERY" | jq -Rs .)

          RESPONSE=$(curl -s -X POST -H "Authorization: bearer $GITHUB_TOKEN" -H "Content-Type: application/json" \
          -d "{\"query\": $JSON_QUERY}" https://api.github.com/graphql)

          # Extract the project card ID for the issue
          ITEM_ID=$(echo "$RESPONSE" | jq -r ".data.node.items.nodes[] | select(.content.id == \"$ISSUE_ID\") | .id")

          if [ -z "$ITEM_ID" ]; then
            echo "Project card ID not found for issue $ISSUE_ID"
            exit 1
          fi

          if [ "${{ github.event.action }}" == "opened" ]; then
            FIELD_ID=$FIELD_ID_START
          elif [ "${{ github.event.action }}" == "closed" ]; then
            FIELD_ID=$FIELD_ID_END
          fi

          # Mutation to update the project card date
          MUTATION=$(cat <<EOF
          mutation {
            updateProjectV2ItemFieldValue(input: {projectId: "$PROJECT_ID", itemId: "$ITEM_ID", fieldId: "$FIELD_ID", value: {date: "$DATE_VALUE"}}) {
              projectV2Item {
                id
              }
            }
          }
          EOF
          )

          # Escape the JSON string properly
          JSON_MUTATION=$(echo "$MUTATION" | jq -Rs .)

          curl -X POST -H "Authorization: bearer $GITHUB_TOKEN" -H "Content-Type: application/json" \
          -d "{\"query\": $JSON_MUTATION}" https://api.github.com/graphql
