name: Create Draft PR from Issue

on:
  create:

jobs:
  create-draft-pr:
    runs-on: ubuntu-latest
    if: github.event.ref_type == 'branch'
    permissions:
      issues: read
      pull-requests: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create empty commit if no new commits
        run: |
          if [ $(git rev-list --count main..${{ github.ref_name }}) -eq 0 ]; then
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git commit --allow-empty -m "Initial commit for draft PR"
            git push origin ${{ github.ref }}
          fi

      - name: Create Draft PR
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const branchName = context.ref.replace('refs/heads/', '');
            const issueNumber = branchName.split('-')[0];

            console.log('Branch created:', branchName);
            console.log('Associated issue number:', issueNumber);

            try {
              const { data: issue } = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber
              });
              
              const prTitle = `${issue.title}`;
              const prBody = `이 PR은 #${issueNumber} 이슈를 해결하기 위한 작업입니다.`;
              
              const { data: pr } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: prTitle,
                body: prBody,
                head: branchName,
                base: 'main',
                draft: true
              });
              
              console.log('Draft PR created:', pr.html_url);
            } catch (error) {
              console.error('Error:', error);
              core.setFailed(error.message);
            }
