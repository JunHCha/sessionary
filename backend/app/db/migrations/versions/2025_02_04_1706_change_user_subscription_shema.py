"""change user subscription shema

Revision ID: ae47ad4f4179
Revises: 3cf5570a9c36
Create Date: 2025-02-04 17:06:31.220619

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ae47ad4f4179'
down_revision = '3cf5570a9c36'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('main_user_id', sa.Boolean(), nullable=False),
    sa.Column('time_created', sa.DateTime(), nullable=False),
    sa.Column('time_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_subscription_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('group_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user_x_subscription')
    op.drop_column('subscription', 'expires_at')
    op.drop_column('subscription', 'ticket_count')
    op.add_column('user', sa.Column('ticket_count', sa.Integer(), nullable=False))
    op.add_column('user', sa.Column('expires_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('group_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'user', 'group', ['group_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_column('user', 'group_id')
    op.drop_column('user', 'expires_at')
    op.drop_column('user', 'ticket_count')
    op.add_column('subscription', sa.Column('ticket_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('subscription', sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.create_table('user_x_subscription',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('subscription_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], name='user_x_subscription_subscription_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user_x_subscription_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_x_subscription_pkey')
    )
    op.drop_table('user_subscription_history')
    op.drop_table('group')
    # ### end Alembic commands ###
